'''
# 출처 : 백준 1912 연속합 (실버2)
# 유형 : 다이나믹 프로그래밍
# n개의 정수로 이루어진 임의 수열 (1 <= n <= 100,000, 각 수는 -1,000보다 크거나 같고 1,000보다 작거나 같은 정수)
# 연속된 수 몇 개를 선택하여 구할 수 있는 합 중 최댓값 (수는 한개 이상 선택)
'''
# 이전 수와 합산한 값 (연속합)과 현재 값을 비교하여 큰 값으로 갱신
N = int(input())
DP = list(map(int, input().split()))

for i in range(1, N):
    DP[i] = max(DP[i-1] + DP[i], DP[i])

print(max(DP))