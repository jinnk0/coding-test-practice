'''
# 출처 : 백준 1463 1로 만들기 (실버3)
# 유형 : 다이나믹 프로그래밍
# 문제 : 정수 N을 세가지 연산을 통해 1로 만들 때, 연산 횟수의 최소값 구하기
'''
# 거꾸로 생각하기
# N을 3으로 나눈 값을 만들기 위한 연산 횟수 최소값 + 1
# N을 2로 나눈 값을 만들기 위한 연산 횟수 최소값 + 1
# N에서 1을 뺀 값을 만들기 위한 연산 횟수 최소값 + 1
N = int(input())

DP = [0] * (N + 1)
for i in range(2, N+1):
    DP[i] = DP[i-1] + 1
    if i % 3 == 0:
        DP[i] = min(DP[i], DP[i//3] + 1)
    if i % 2 == 0:
        DP[i] = min(DP[i], DP[i//2] + 1)
    
print(DP[N])